<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>y// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>720</x><y>550</y><w>240</w><h>180</h></coordinates><panel_attributes>DatabaseController
--
--
+select(string query) : QSqlQuery
+update(string query) : int
+delete(string query) : int
+insert(string query) : int
bg=orange</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>170</y><w>330</w><h>170</h></coordinates><panel_attributes>VegetableController
--
--
+getSingleVegetable(int) : Vegetable
+getVegetable() : vector&lt;VegetableType&gt;
+addVegetable(Vegetable) : void
+updateVegetable(Vegetable) : void
+deleteVegetable(Vegetable) : void
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>500</x><y>10</y><w>410</w><h>150</h></coordinates><panel_attributes>UnitOfMeasurementController
--
--
+getUnitOfMeasurement(int) : UnitOfMeasurement
+getUnitOfMeasurement(Vegetable) : UnitOfMeasurement
+getUnitOfMeasurement(Activity) : UnitOfMeasurement
+getUnitOfMeasurements() : vector&lt;UnitOfMeasurement&gt;
+addUnitOfMeasurement(UnitOfMeasurement) : void
+updateUnitOfMeasurement(UnitOfMeasurement) : void
+deleteUnitOfMeasurement(UnitOfMeasurement) : void
bg=red</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>320</x><y>350</y><w>290</w><h>190</h></coordinates><panel_attributes>MajorTableController
--
-table : string
--
+MajorTableController(string table)
+getMajorTable(int) : MajorTable
+getMajorTable(Entity) : MajorTable
+getMajorTable(Event) : MajorTable
+getMajorTables() : vector&lt;MajorTable&gt;
+addMajorTable(MajorTable) : void
+updateMajorTable(MajorTable) : void
+deleteMajorTable(MajorTable) : void
bg=blue</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>240</x><y>10</y><w>250</w><h>150</h></coordinates><panel_attributes>ActivityController
--
--
+getActivity(int) : Activity
+getActivity(Event) : Activity
+getActivities() : vector&lt;Activity&gt;
+addActivity(Activity) : void
+updateActivity(Activity) : void
+deleteActivity(Activity) : void
bg=red</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>360</x><y>170</y><w>330</w><h>170</h></coordinates><panel_attributes>CattleController
--
--
+getSingleCattle(int) : Cattle
+getCattle() : vector&lt;CattleType&gt;
+addCattle(Cattle) : void
+updateCattle(Cattle) : void
+deleteCattle(Cattle) : void
+getOffspring(Cattle) : vector&lt;CattleType&gt;
-getMother(Cattle) : CattleType
-getFather(Cattle) : CattleType
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>10</y><w>210</w><h>150</h></coordinates><panel_attributes>EventController
--
--
+getEvent(int) : Event
+getEvent(Entity) : Event
+getEvents() : vector&lt;Event&gt;
+addEvent(Event) : void
+updateEvent(Event) : void
+deleteEvent(Event) : void
bg=red</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>350</y><w>290</w><h>190</h></coordinates><panel_attributes>MinorTableController
--
-table : string
--
+MinorTableController(string table)
+getMinorTable(int) : MinorTable
+getMinorTable(Cattle) : MinorTable
+getMinorTables() : vector&lt;MinorTable&gt;
+addMinorTable(MinorTable) : void
+updateMinorTable(MinorTable) : void
+deleteMinorTable(MinorTable) : void
bg=blue</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>550</y><w>290</w><h>180</h></coordinates><panel_attributes>ModuleController
--
--
+ModuleController(string table)
+getModule(int) : Module
+getModule(Cattle) : Module
+getModules() : vector&lt;ListClass&gt;
+addModule(Module) : void
+updateModule(Module) : void
+deleteModule(Module) : void
bg=magenta</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>320</x><y>550</y><w>290</w><h>180</h></coordinates><panel_attributes>LogController
--
--
+LogController(string table)
+getLog(int) : Log
+getLogs() : vector&lt;ListClass&gt;
+addLog(Log) : void
+updateLog(Log) : void
+deleteLog(Log) : void
bg=magenta</panel_attributes><additional_attributes/></element></umlet_diagram>